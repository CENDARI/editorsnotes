/*
 green-turtle version 0.21.0 Copyright (c) 2011-2012, R. Alexander Milowski <alex@milowski.com> All rights reserved. */
var RDFa = RDFa || {};
RDFa.trackChanges = function(p) {
	p ? RDFa.observer || ( p = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver, RDFa.trackChanges && p && (RDFa.observer = p(function() {
		console.log("document changed.")
	}), RDFa.observer.observe(document.documentElement, {
		childList : !0,
		attributes : !0,
		characterData : !0,
		subtree : !0,
		attributeFilter : "typeof rel property content resource href".split(" ")
	}))) : RDFa.observer && (RDFa.observer.disconnect(), RDFa.observer = !1)
};
RDFa.attach = function(p) {
	function t() {
	}

	function i(a) {
		this.target = a ? a : {};
		this.target.prefixes = {};
		this.target.terms = {};
		this.vocabulary = this.language = null;
		this.blankCounter = 0;
		this.langAttributes = [{
			namespaceURI : "http://www.w3.org/XML/1998/namespace",
			localName : "lang"
		}];
		this.contentAttributes = ["content"];
		this.inXHTMLMode = !1;
		this.absURIRE = /[\w\_\-]+:\S+/;
		this.finishedHandlers = [];
		this.init()
	}

	function C(a, b) {
		this.context = a;
		this.id = this.subject = b;
		this.predicates = {};
		this.origins = [];
		this.types = []
	}

	function J(a) {
		this.predicate = this.id = a;
		this.objects = []
	}

	function w(a) {
		i.call(this, a)
	}

	function M(a) {
		this.query = function(b, d) {
			if (!b)
				return a.getProjections(d);
			var c = [], e;
			for (e in a._data_.triplesGraph) {
				var f = a._data_.triplesGraph[e], g;
				for (g in b) {
					var h = a._data_.curieParser.parse(g, !0), h = f.predicates[h];
					if (!h) {
						f = null;
						break
					}
					for (var i = a._data_.curieParser.parse(b[g], !1), k = null, m = 0; !k && m < h.objects.length; m++)
						h.objects[m].value == i && ( k = h.objects[m]);
					if (!k) {
						f = null;
						break
					}
				}
				f && c.push(j.toProjection(a, f, d))
			}
			return c
		}
	}

	function A(a, b) {
		this._data_ = {
			owner : a,
			subject : b,
			properties : {}
		}
	}

	function j(a) {
		var b = this._data_ = {
			tripleCount : 0,
			triplesGraph : {},
			prefixes : {},
			terms : {},
			baseURI : this.parseURI(a)
		};
		this._data_.curieParser = {
			trim : function(a) {
				return a.replace(/^\s\s*/, "").replace(/\s\s*$/, "")
			},
			parse : function(a, c) {
				a = this.trim(a);
				"[" == a.charAt(0) && "]" == a.charAt(a.length - 1) && ( a = a.substring(1, a.length - 1));
				var e = a.indexOf(":");
				if (0 <= e) {
					var f = a.substring(0, e);
					if ("" == f)
						return ( f = b.prefixes[""]) ? f + a.substring(e + 1) : null;
					if ("_" == f)
						return "_:" + a.substring(e + 1);
					if (j.NCNAME.test(f) && ( f = b.prefixes[f]))
						return f + a.substring(e + 1)
				}
				return c ? b.baseURI.resolve(a) : a
			}
		};
		Object.defineProperty(this, "rdfa", {
			value : new M(this),
			writable : !1,
			configurable : !1,
			enumerable : !0
		})
	}
	t.SCHEME = /^[A-Za-z][A-Za-z0-9+-.]*:/;
	t.prototype.parseURI = function(a) {
		var b = t.SCHEME.exec(a);
		if (!b)
			throw "Bad URI value, no scheme: " + a;
		a = {
			spec : a
		};
		a.scheme = b[0].substring(0, b[0].length - 1);
		a.schemeSpecificPart = a.spec.substring(b[0].length);
		"/" == a.schemeSpecificPart.charAt(0) && "/" == a.schemeSpecificPart.charAt(1) ? this.parseGeneric(a) : a.isGeneric = !1;
		a.normalize = function() {
			if (this.isGeneric && 0 != this.segments.length) {
				if (1 < this.path.length && "/." == this.path.substring(this.path.length - 2))
					this.path = this.path.substring(0, this.path.length - 1), this.segments.splice(this.segments.length - 1, 1);
				else {
					var a = this.path.charAt(this.path.length - 1);
					"/" != a && ( a = "");
					for (var b = 0; b < this.segments.length; b++)
						0 < b && ".." == this.segments[b] && (this.segments.splice(b - 1, 2), b -= 2), "." == this.segments[b] && (this.segments.splice(b, 1), b--);
					this.path = 0 == this.segments.length ? "/" : "/" + this.segments.join("/") + a
				}
				this.schemeSpecificPart = "//" + this.authority + this.path;
				"undefined" != typeof this.query && (this.schemeSpecificPart += "?" + this.query);
				"undefined" != typeof this.fragment && (this.schemeSpecificPart += "#" + this.fragment);
				this.spec = this.scheme + ":" + this.schemeSpecificPart
			}
		};
		a.resolve = function(a) {
			if (!a)
				return this.spec;
			if ("#" == a.charAt(0)) {
				var b = this.spec.lastIndexOf("#");
				return 0 > b ? this.spec + a : this.spec.substring(0, b) + a
			}
			if (!this.isGeneric)
				throw "Cannot resolve uri against non-generic URI: " + this.spec;
			a.indexOf(":");
			if ("/" == a.charAt(0))
				return this.scheme + "://" + this.authority + a;
			if ("." == a.charAt(0) && "/" == a.charAt(1)) {
				if ("/" == this.path.charAt(this.path.length - 1))
					return this.scheme + "://" + this.authority + this.path + a.substring(2);
				b = this.path.lastIndexOf("/");
				return this.scheme + "://" + this.authority + this.path.substring(0, b) + a.substring(1)
			}
			if (t.SCHEME.test(a))
				return a;
			if ("?" == a.charAt(0) || "/" == this.path.charAt(this.path.length - 1))
				return this.scheme + "://" + this.authority + this.path + a;
			b = this.path.lastIndexOf("/");
			return this.scheme + "://" + this.authority + this.path.substring(0, b + 1) + a
		};
		a.relativeTo = function(a) {
			if (a.scheme != this.scheme)
				return this.spec;
			if (!this.isGeneric)
				throw "A non generic URI cannot be made relative: " + this.spec;
			if (!a.isGeneric)
				throw "Cannot make a relative URI against a non-generic URI: " + a.spec;
			if (a.authority != this.authority)
				return this.spec;
			for (var b = 0; b < this.segments.length && b < a.segments.length; b++)
				if (this.segments[b] != a.segments[b]) {
					for (var e = "", f = b; f < a.segments.length; f++)
						e += "../";
					for ( f = b; f < this.segments.length; f++)
						e += this.segments[f], f + 1 < this.segments.length && (e += "/");
					"/" == this.path.charAt(this.path.length - 1) && (e += "/");
					return e
				}
			if (this.segments.length == a.segments.length)
				return this.hash ? this.hash : this.query ? this.query : "";
			if (b < this.segments.length) {
				e = "";
				for ( f = b; f < this.segments.length; f++)
					e += this.segments[f], f + 1 < this.segments.length && (e += "/");
				"/" == this.path.charAt(this.path.length - 1) && (e += "/");
				return e
			}
			throw "Cannot calculate a relative URI for " + this.spec + " against " + a.spec;
		};
		return a
	};
	t.prototype.parseGeneric = function(a) {
		if ("/" != a.schemeSpecificPart.charAt(0) || "/" != a.schemeSpecificPart.charAt(1))
			throw "Generic URI values should start with '//':" + a.spec;
		var b = a.schemeSpecificPart.substring(2), d = b.indexOf("/");
		a.authority = 0 > d ? b : b.substring(0, d);
		a.path = 0 > d ? "" : b.substring(d);
		b = a.path.indexOf("#");
		0 <= b && (a.fragment = a.path.substring(b + 1), a.path = a.path.substring(0, b));
		b = a.path.indexOf("?");
		0 <= b && (a.query = a.path.substring(b + 1), a.path = a.path.substring(0, b));
		"/" == a.path || "" == a.path ? a.segments = [] : (a.segments = a.path.split(/\//), 0 < a.segments.length && ("" == a.segments[0] && 1 < a.path.length && "/" != a.path.charAt(1)) && a.segments.shift(), 0 < a.segments.length && 0 < a.path.length && "/" == a.path.charAt(a.path.length - 1) && "" == a.segments[a.segments.length - 1] && 1 < a.path.length && "/" != a.path.charAt(a.path.length - 2) && a.segments.pop());
		a.isGeneric = !0
	};
	i.prototype = new t;
	i.prototype.constructor = i;
	i.prototype.newBlankNode = function() {
		this.blankCounter++;
		return "_:" + this.blankCounter
	};
	i.XMLLiteralURI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral";
	i.PlainLiteralURI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral";
	i.objectURI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#object";
	i.typeURI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#type";
	i.nameChar = "[-A-Z_a-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02ff\u0370-\u037d\u037f-\u1fff\u200c-\u200d\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd\u10000-\uefffF.0-9\u00b7\u0300-\u036f\u203f-\u2040]";
	i.nameStartChar = "[A-Za-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u00ff\u0100-\u0131\u0134-\u013e\u0141-\u0148\u014a-\u017e\u0180-\u01c3\u01cd-\u01f0\u01f4-\u01f5\u01fa-\u0217\u0250-\u02a8\u02bb-\u02c1\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03ce\u03d0-\u03d6\u03da\u03dc\u03de\u03e0\u03e2-\u03f3\u0401-\u040c\u040e-\u044f\u0451-\u045c\u045e-\u0481\u0490-\u04c4\u04c7-\u04c8\u04cb-\u04cc\u04d0-\u04eb\u04ee-\u04f5\u04f8-\u04f9\u0531-\u0556\u0559\u0561-\u0586\u05d0-\u05ea\u05f0-\u05f2\u0621-\u063a\u0641-\u064a\u0671-\u06b7\u06ba-\u06be\u06c0-\u06ce\u06d0-\u06d3\u06d5\u06e5-\u06e6\u0905-\u0939\u093d\u0958-\u0961\u0985-\u098c\u098f-\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09dc-\u09dd\u09df-\u09e1\u09f0-\u09f1\u0a05-\u0a0a\u0a0f-\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32-\u0a33\u0a35-\u0a36\u0a38-\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8b\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2-\u0ab3\u0ab5-\u0ab9\u0abd\u0ae0\u0b05-\u0b0c\u0b0f-\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32-\u0b33\u0b36-\u0b39\u0b3d\u0b5c-\u0b5d\u0b5f-\u0b61\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99-\u0b9a\u0b9c\u0b9e-\u0b9f\u0ba3-\u0ba4\u0ba8-\u0baa\u0bae-\u0bb5\u0bb7-\u0bb9\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c33\u0c35-\u0c39\u0c60-\u0c61\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cde\u0ce0-\u0ce1\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\u0d28\u0d2a-\u0d39\u0d60-\u0d61\u0e01-\u0e2e\u0e30\u0e32-\u0e33\u0e40-\u0e45\u0e81-\u0e82\u0e84\u0e87-\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-\u0e9f\u0ea1-\u0ea3\u0ea5\u0ea7\u0eaa-\u0eab\u0ead-\u0eae\u0eb0\u0eb2-\u0eb3\u0ebd\u0ec0-\u0ec4\u0f40-\u0f47\u0f49-\u0f69\u10a0-\u10c5\u10d0-\u10f6\u1100\u1102-\u1103\u1105-\u1107\u1109\u110b-\u110c\u110e-\u1112\u113c\u113e\u1140\u114c\u114e\u1150\u1154-\u1155\u1159\u115f-\u1161\u1163\u1165\u1167\u1169\u116d-\u116e\u1172-\u1173\u1175\u119e\u11a8\u11ab\u11ae-\u11af\u11b7-\u11b8\u11ba\u11bc-\u11c2\u11eb\u11f0\u11f9\u1e00-\u1e9b\u1ea0-\u1ef9\u1f00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2126\u212a-\u212b\u212e\u2180-\u2182\u3041-\u3094\u30a1-\u30fa\u3105-\u312c\uac00-\ud7a3\u4e00-\u9fa5\u3007\u3021-\u3029_]";
	i.NCNAME = RegExp("^" + i.nameStartChar + i.nameChar + "*$");
	i.prototype.trim = function(a) {
		return a.replace(/^\s\s*/, "").replace(/\s\s*$/, "")
	};
	i.prototype.tokenize = function(a) {
		return this.trim(a).split(/\s+/)
	};
	i.prototype.parseSafeCURIEOrCURIEOrURI = function(a, b, d) {
		a = this.trim(a);
		return "[" == a.charAt(0) && "]" == a.charAt(a.length - 1) ? ( a = a.substring(1, a.length - 1), a = a.trim(a), 0 == a.length ? null : this.parseCURIE(a, b, d)) : this.parseCURIEOrURI(a, b, d)
	};
	i.prototype.parseCURIE = function(a, b) {
		var d = a.indexOf(":");
		if (0 <= d) {
			var c = a.substring(0, d);
			if ("" == c)
				return ( c = b[""]) ? c + a.substring(d + 1) : null;
			if ("_" == c)
				return "_:" + a.substring(d + 1);
			if (i.NCNAME.test(c) && ( c = b[c]))
				return c + a.substring(d + 1)
		}
		return null
	};
	i.prototype.parseCURIEOrURI = function(a, b, d) {
		return ( b = this.parseCURIE(a, b, d)) ? b : this.resolveAndNormalize(d, a)
	};
	i.prototype.parsePredicate = function(a, b, d, c, e) {
		return "" == a ? null : ( a = this.parseTermOrCURIEOrAbsURI(a, b, d, c, e)) && 0 == a.indexOf("_:") ? null : a
	};
	i.prototype.parseTermOrCURIEOrURI = function(a, b, d, c, e) {
		a = this.trim(a);
		if (( c = this.parseCURIE(a, c, e)) || ( c = d[a]))
			return c;
		c = a.toLowerCase();
		return ( c = d[c]) ? c : b && !this.absURIRE.exec(a) ? b + a : this.resolveAndNormalize(e, a)
	};
	i.prototype.parseTermOrCURIEOrAbsURI = function(a, b, d, c, e) {
		a = this.trim(a);
		if ( c = this.parseCURIE(a, c, e))
			return c;
		if (b && !this.absURIRE.exec(a))
			return b + a;
		if ( b = d[a])
			return b;
		b = a.toLowerCase();
		return ( b = d[b]) ? b : this.absURIRE.exec(a) ? this.resolveAndNormalize(e, a) : null
	};
	i.prototype.resolveAndNormalize = function(a, b) {
		var d = a.resolve(b), d = this.parseURI(d);
		d.normalize();
		return d.spec
	};
	i.prototype.parsePrefixMappings = function(a, b) {
		for (var d = this.tokenize(a), c = null, e = 0; e < d.length; e++)
			":" == d[e][d[e].length - 1] ? c = d[e].substring(0, d[e].length - 1) : c && (b[c] = d[e], c = null)
	};
	i.prototype.copyMappings = function(a) {
		var b = {}, d;
		for (d in a)
		b[d] = a[d];
		return b
	};
	i.prototype.ancestorPath = function(a) {
		for (var b = ""; a && a.nodeType != Node.DOCUMENT_NODE; )
			b = "/" + a.localName + b, a = a.parentNode;
		return b
	};
	i.prototype.setContext = function(a) {
		"html" == a.localName && "XHTML+RDFa 1.1" == a.getAttribute("version") ? this.setXHTMLContext() : "html" == a.localName || "http://www.w3.org/1999/xhtml" == a.namespaceURI ? this.setHTMLContext() : this.setXMLContext()
	};
	i.prototype.setInitialContext = function() {
		this.vocabulary = null;
		this.target.prefixes = {};
		this.target.terms = {};
		this.langAttributes = [{
			namespaceURI : "http://www.w3.org/XML/1998/namespace",
			localName : "lang"
		}];
		this.contentAttributes = ["content"];
		this.target.prefixes[""] = "http://www.w3.org/1999/xhtml/vocab#";
		this.target.prefixes.grddl = "http://www.w3.org/2003/g/data-view#";
		this.target.prefixes.ma = "http://www.w3.org/ns/ma-ont#";
		this.target.prefixes.owl = "http://www.w3.org/2002/07/owl#";
		this.target.prefixes.rdf = "http://www.w3.org/1999/02/22-rdf-syntax-ns#";
		this.target.prefixes.rdfa = "http://www.w3.org/ns/rdfa#";
		this.target.prefixes.rdfs = "http://www.w3.org/2000/01/rdf-schema#";
		this.target.prefixes.rif = "http://www.w3.org/2007/rif#";
		this.target.prefixes.skos = "http://www.w3.org/2004/02/skos/core#";
		this.target.prefixes.skosxl = "http://www.w3.org/2008/05/skos-xl#";
		this.target.prefixes.wdr = "http://www.w3.org/2007/05/powder#";
		this.target.prefixes["void"] = "http://rdfs.org/ns/void#";
		this.target.prefixes.wdrs = "http://www.w3.org/2007/05/powder-s#";
		this.target.prefixes.xhv = "http://www.w3.org/1999/xhtml/vocab#";
		this.target.prefixes.xml = "http://www.w3.org/XML/1998/namespace";
		this.target.prefixes.xsd = "http://www.w3.org/2001/XMLSchema#";
		this.target.prefixes.sd = "http://www.w3.org/ns/sparql-service-description#";
		this.target.prefixes.org = "http://www.w3.org/ns/org#";
		this.target.prefixes.gldp = "http://www.w3.org/ns/people#";
		this.target.prefixes.cnt = "http://www.w3.org/2008/content#";
		this.target.prefixes.dcat = "http://www.w3.org/ns/dcat#";
		this.target.prefixes.earl = "http://www.w3.org/ns/earl#";
		this.target.prefixes.ht = "http://www.w3.org/2006/http#";
		this.target.prefixes.ptr = "http://www.w3.org/2009/pointers#";
		this.target.prefixes.cc = "http://creativecommons.org/ns#";
		this.target.prefixes.ctag = "http://commontag.org/ns#";
		this.target.prefixes.dc = "http://purl.org/dc/terms/";
		this.target.prefixes.dcterms = "http://purl.org/dc/terms/";
		this.target.prefixes.foaf = "http://xmlns.com/foaf/0.1/";
		this.target.prefixes.gr = "http://purl.org/goodrelations/v1#";
		this.target.prefixes.ical = "http://www.w3.org/2002/12/cal/icaltzd#";
		this.target.prefixes.og = "http://ogp.me/ns#";
		this.target.prefixes.rev = "http://purl.org/stuff/rev#";
		this.target.prefixes.sioc = "http://rdfs.org/sioc/ns#";
		this.target.prefixes.v = "http://rdf.data-vocabulary.org/#";
		this.target.prefixes.vcard = "http://www.w3.org/2006/vcard/ns#";
		this.target.prefixes.schema = "http://schema.org/";
		this.target.terms.describedby = "http://www.w3.org/2007/05/powder-s#describedby";
		this.target.terms.license = "http://www.w3.org/1999/xhtml/vocab#license";
		this.target.terms.role = "http://www.w3.org/1999/xhtml/vocab#role"
	};
	i.prototype.setXMLContext = function() {
		this.setInitialContext();
		this.inXHTMLMode = !1
	};
	i.prototype.setHTMLContext = function() {
		this.setInitialContext();
		this.langAttributes = [{
			namespaceURI : "http://www.w3.org/XML/1998/namespace",
			localName : "lang"
		}, {
			namespaceURI : null,
			localName : "lang"
		}];
		this.contentAttributes = ["value", "datetime", "content"];
		this.inXHTMLMode = !1
	};
	i.prototype.setXHTMLContext = function() {
		this.setInitialContext();
		this.inXHTMLMode = !0;
		this.langAttributes = [{
			namespaceURI : "http://www.w3.org/XML/1998/namespace",
			localName : "lang"
		}];
		this.contentAttributes = ["content"];
		this.target.terms.alternate = "http://www.w3.org/1999/xhtml/vocab#alternate";
		this.target.terms.appendix = "http://www.w3.org/1999/xhtml/vocab#appendix";
		this.target.terms.bookmark = "http://www.w3.org/1999/xhtml/vocab#bookmark";
		this.target.terms.cite = "http://www.w3.org/1999/xhtml/vocab#cite";
		this.target.terms.chapter = "http://www.w3.org/1999/xhtml/vocab#chapter";
		this.target.terms.contents = "http://www.w3.org/1999/xhtml/vocab#contents";
		this.target.terms.copyright = "http://www.w3.org/1999/xhtml/vocab#copyright";
		this.target.terms.first = "http://www.w3.org/1999/xhtml/vocab#first";
		this.target.terms.glossary = "http://www.w3.org/1999/xhtml/vocab#glossary";
		this.target.terms.help = "http://www.w3.org/1999/xhtml/vocab#help";
		this.target.terms.icon = "http://www.w3.org/1999/xhtml/vocab#icon";
		this.target.terms.index = "http://www.w3.org/1999/xhtml/vocab#index";
		this.target.terms.last = "http://www.w3.org/1999/xhtml/vocab#last";
		this.target.terms.license = "http://www.w3.org/1999/xhtml/vocab#license";
		this.target.terms.meta = "http://www.w3.org/1999/xhtml/vocab#meta";
		this.target.terms.next = "http://www.w3.org/1999/xhtml/vocab#next";
		this.target.terms.prev = "http://www.w3.org/1999/xhtml/vocab#prev";
		this.target.terms.previous = "http://www.w3.org/1999/xhtml/vocab#previous";
		this.target.terms.section = "http://www.w3.org/1999/xhtml/vocab#section";
		this.target.terms.stylesheet = "http://www.w3.org/1999/xhtml/vocab#stylesheet";
		this.target.terms.subsection = "http://www.w3.org/1999/xhtml/vocab#subsection";
		this.target.terms.start = "http://www.w3.org/1999/xhtml/vocab#start";
		this.target.terms.top = "http://www.w3.org/1999/xhtml/vocab#top";
		this.target.terms.up = "http://www.w3.org/1999/xhtml/vocab#up";
		this.target.terms.p3pv1 = "http://www.w3.org/1999/xhtml/vocab#p3pv1";
		this.target.terms.related = "http://www.w3.org/1999/xhtml/vocab#related";
		this.target.terms.role = "http://www.w3.org/1999/xhtml/vocab#role";
		this.target.terms.transformation = "http://www.w3.org/1999/xhtml/vocab#transformation"
	};
	i.prototype.init = function() {
	};
	i.prototype.newSubjectOrigin = function() {
	};
	i.prototype.addTriple = function() {
	};
	i.prototype.process = function(a) {
		a.nodeType == Node.DOCUMENT_NODE ? ( a = a.documentElement, this.setContext(a)) : a.parentNode.nodeType == Node.DOCUMENT_NODE && this.setContext(a);
		var b = [], d = function(a) {
			var b = a.indexOf("#");
			0 <= b && ( a = a.substring(0, b));
			return a
		};
		for (b.push({
			current : a,
			context : this.push(null, d(a.baseURI))
		}); 0 < b.length; ) {
			var c = b.shift();
			if (c.parent) {
				if (!(c.context.parent && c.context.parent.listMapping == c.listMapping))
					for (var e in c.listMapping) {
						var f = c.listMapping[e];
						if (0 == f.length)
							this.addTriple(c.parent, c.subject, e, {
								type : i.objectURI,
								value : "http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"
							});
						else {
							for (var g = [], h = 0; h < f.length; h++)
								g.push(this.newBlankNode());
							for ( h = 0; h < g.length; h++)
								this.addTriple(c.parent, g[h], "http://www.w3.org/1999/02/22-rdf-syntax-ns#first", f[h]), this.addTriple(c.parent, g[h], "http://www.w3.org/1999/02/22-rdf-syntax-ns#rest", {
									type : i.objectURI,
									value : h + 1 < g.length ? g[h + 1] : "http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"
								});
							this.addTriple(c.parent, c.subject, e, {
								type : i.objectURI,
								value : g[0]
							})
						}
					}
			} else {
				var g = c.current, c = c.context, I = !1, k = null, m = null, l = null, j = c.prefixes, f = !1, p = [], r = c.listMapping, w = c.parent ? !1 : !0, t = c.language, u = c.vocabulary, n = this.parseURI(d(g.baseURI));
				g.item = null;
				if ( h = g.getAttributeNode("vocab"))
					h = this.trim(h.value), 0 < h.length ? ( u = h, this.addTriple(g, n.spec, "http://www.w3.org/ns/rdfa#usesVocabulary", {
						type : i.objectURI,
						value : u
					})) : u = this.vocabulary;
				for ( h = 0; h < g.attributes.length; h++) {
					var s = g.attributes[h];
					if ("x" == s.nodeName.charAt(0) && 0 == s.nodeName.indexOf("xmlns:")) {
						f || ( j = this.copyMappings(j), f = !0);
						var D = s.nodeName.substring(6);
						j[D] = this.trim(s.value)
					}
				}
				if ( h = g.getAttributeNode("prefix"))
					f || ( j = this.copyMappings(j), f = !0), this.parsePrefixMappings(h.value, j);
				f = null;
				for ( h = 0; !f && h < this.langAttributes.length; h++)
					f = g.getAttributeNodeNS(this.langAttributes[h].namespaceURI, this.langAttributes[h].localName);
				f && ( h = this.trim(f.value), 0 < h.length && ( t = h));
				for (var s = g.getAttributeNode("rel"), D = g.getAttributeNode("rev"), x = g.getAttributeNode("typeof"), A = g.getAttributeNode("property"), C = g.getAttributeNode("datatype"), E = null, h = 0; !E && h < this.contentAttributes.length; h++)
					E = g.getAttributeNode(this.contentAttributes[h]);
				var y = g.getAttributeNode("about"), F = g.getAttributeNode("src"), B = g.getAttributeNode("resource"), G = g.getAttributeNode("href"), H = g.getAttributeNode("inlist");
				if (s || D) {
					y && ( k = this.parseSafeCURIEOrCURIEOrURI(y.value, j, n));
					x && ( l = k);
					k || (g.parentNode.nodeType == Node.DOCUMENT_NODE ? k = d(g.baseURI) : c.parentObject && ( k = d(g.parentNode.baseURI) == c.parentObject ? d(g.baseURI) : c.parentObject));
					B && ( m = this.parseSafeCURIEOrCURIEOrURI(B.value, j, n));
					if (!m)
						if (G)
							m = this.resolveAndNormalize(n, G.value);
						else if (F)
							m = this.resolveAndNormalize(n, F.value);
						else if (x && !y && (!this.inXHTMLMode || !("head" == g.localName || "body" == g.localName)))
							m = this.newBlankNode();
					x && !y && this.inXHTMLMode && ("head" == g.localName || "body" == g.localName) ? l = k : x && !y && ( l = m)
				} else if (A && !E && !C) {
					if (y && ( k = this.parseSafeCURIEOrCURIEOrURI(y.value, j, n), x && ( l = k)), !k && g.parentNode.nodeType == Node.DOCUMENT_NODE ? ( k = d(g.baseURI), x && ( l = k)) : !k && c.parentObject && ( k = d(g.parentNode.baseURI) == c.parentObject ? d(g.baseURI) : c.parentObject), x && !l) {
						B && ( l = this.parseSafeCURIEOrCURIEOrURI(B.value, j, n));
						!l && G && ( l = this.resolveAndNormalize(n, G.value));
						!l && F && ( l = this.resolveAndNormalize(n, F.value));
						if (!l && this.inXHTMLMode && ("head" == g.localName || "body" == g.localName))
							l = k;
						l || ( l = this.newBlankNode());
						m = l
					}
				} else
					y && ( k = this.parseSafeCURIEOrCURIEOrURI(y.value, j, n)), !k && B && ( k = this.parseSafeCURIEOrCURIEOrURI(B.value, j, n)), !k && G && ( k = this.resolveAndNormalize(n, G.value)), !k && F && ( k = this.resolveAndNormalize(n, F.value)), k || (g.parentNode.nodeType == Node.DOCUMENT_NODE ? k = d(g.baseURI) : this.inXHTMLMode && ("head" == g.localName || "body" == g.localName) ? k = d(g.parentNode.baseURI) == c.parentObject ? d(g.baseURI) : c.parentObject : x ? k = this.newBlankNode() : c.parentObject && ( k = d(g.parentNode.baseURI) == c.parentObject ? d(g.baseURI) : c.parentObject, A || ( I = !0))), x && ( l = k);
				if (k && (y || B || l))
					h = k, x && (!y && !B && m) && ( h = m), this.newSubjectOrigin(g, h);
				if (l)
					for (var q = this.tokenize(x.value), h = 0; h < q.length; h++)
						( f = this.parseTermOrCURIEOrAbsURI(q[h], u, c.terms, j, n)) && this.addTriple(g, l, i.typeURI, {
							type : i.objectURI,
							value : f
						});
				k && k != c.parentObject && ( r = {}, w = !0);
				if (m) {
					if (s && H) {
						q = this.tokenize(s.value);
						for ( h = 0; h < q.length; h++)
							if ( e = this.parsePredicate(q[h], u, c.terms, j, n))
								f = r[e], f || ( f = [], r[e] = f), f.push({
									type : i.objectURI,
									value : m
								})
					} else if (s) {
						q = this.tokenize(s.value);
						for ( h = 0; h < q.length; h++)
							( e = this.parsePredicate(q[h], u, c.terms, j, n)) && this.addTriple(g, k, e, {
								type : i.objectURI,
								value : m
							})
					}
					if (D) {
						q = this.tokenize(D.value);
						for ( h = 0; h < q.length; h++)
							( e = this.parsePredicate(q[h], u, c.terms, j, n)) && this.addTriple(g, m, e, {
								type : i.objectURI,
								value : k
							})
					}
				} else {
					if (k && !m && (s || D))
						m = this.newBlankNode();
					if (s && H) {
						q = this.tokenize(s.value);
						for ( h = 0; h < q.length; h++)
							if ( e = this.parsePredicate(q[h], u, c.terms, j, n))
								f = r[e], f || ( f = [], r[e] = f), p.push({
									predicate : e,
									list : f
								})
					} else if (s) {
						q = this.tokenize(s.value);
						for ( h = 0; h < q.length; h++)
							( e = this.parsePredicate(q[h], u, c.terms, j, n)) && p.push({
								predicate : e,
								forward : !0
							})
					}
					if (D) {
						q = this.tokenize(D.value);
						for ( h = 0; h < q.length; h++)
							( e = this.parsePredicate(q[h], u, c.terms, j, n)) && p.push({
								predicate : e,
								forward : !1
							})
					}
				}
				if (A) {
					var v = null, z = null;
					C ? ( v = "" == C.value ? i.PlainLiteralURI : this.parseTermOrCURIEOrAbsURI(C.value, u, c.terms, j, n), z = v == i.XMLLiteralURI ? null : E ? E.value : g.textContent) : E ? ( v = i.PlainLiteralURI, z = E.value) : !s && (!D && !E) && (B && ( z = this.parseSafeCURIEOrCURIEOrURI(B.value, j, n)), !z && G ? z = this.resolveAndNormalize(n, G.value) : !z && F && ( z = this.resolveAndNormalize(n, F.value)), z && ( v = i.objectURI));
					v || (x && !y ? ( v = i.objectURI, z = l) : ( v = i.PlainLiteralURI, z = g.textContent));
					q = this.tokenize(A.value);
					for ( h = 0; h < q.length; h++)
						if ( e = this.parsePredicate(q[h], u, c.terms, j, n))
							H ? ( f = r[e], f || ( f = [], r[e] = f), f.push(v == i.XMLLiteralURI ? {
								type : i.XMLLiteralURI,
								value : g.childNodes
							} : {
								type : v ? v : i.PlainLiteralURI,
								value : z,
								language : t
							})) : v == i.XMLLiteralURI ? this.addTriple(g, k, e, {
								type : i.XMLLiteralURI,
								value : g.childNodes
							}) : this.addTriple(g, k, e, {
								type : v ? v : i.PlainLiteralURI,
								value : z,
								language : t
							})
				}
				if (k && !I)
					for ( h = 0; h < c.incomplete.length; h++)
						c.incomplete[h].list ? c.incomplete[h].list.push({
							type : i.objectURI,
							value : k
						}) : c.incomplete[h].forward ? this.addTriple(g, c.subject, c.incomplete[h].predicate, {
							type : i.objectURI,
							value : k
						}) : this.addTriple(g, k, c.incomplete[h].predicate, {
							type : i.objectURI,
							value : c.subject
						});
				l = null;
				n = k;
				I ? ( l = this.push(c, c.subject), l.parentObject = d(g.parentNode.baseURI) == c.parentObject ? d(g.baseURI) : c.parentObject, l.incomplete = c.incomplete, l.language = t, l.prefixes = j) : ( l = this.push(c, k), l.parentObject = m ? m : k ? k : c.subject, l.prefixes = j, l.incomplete = p, m && ( n = m, r = {}, w = !0), l.listMapping = r, l.language = t);
				l.vocabulary = u;
				w && b.unshift({
					parent : g,
					context : c,
					subject : n,
					listMapping : r
				});
				for ( g = g.lastChild; g; g = g.previousSibling)
					g.nodeType == Node.ELEMENT_NODE && b.unshift({
						current : g,
						context : l
					})
			}
		}
		for ( h = 0; h < this.finishedHandlers.length; h++)
			this.finishedHandlers[h](a)
	};
	i.prototype.push = function(a, b) {
		return {
			parent : a,
			subject : b ? b : a ? a.subject : null,
			parentObject : null,
			incomplete : [],
			listMapping : a ? a.listMapping : {},
			language : a ? a.language : this.language,
			prefixes : a ? a.prefixes : this.target.prefixes,
			terms : a ? a.terms : this.target.terms,
			vocabulary : a ? a.vocabulary : this.vocabulary
		}
	};
	C.prototype.toString = function() {
		var a = "<" + this.subject + ">", b;
		for (b in this.predicates)
		a += " " + this.predicates[b] + ";";
		return a + " ."
	};
	C.prototype.toObject = function() {
		var a = {
			subject : this.subject,
			predicates : {}
		}, b;
		for (b in this.predicates) {
			var d = this.predicates[b], c = {
				predicate : b,
				objects : []
			};
			a.predicates[b] = c;
			for (var e = 0; e < d.objects.length; e++) {
				var f = d.objects[e];
				if (f.type == i.XMLLiteralURI) {
					for (var g = new XMLSerializer, h = "", j = 0; j < f.value.length; j++)
						f.value[j].nodeType == Node.ELEMENT_NODE ? h += g.serializeToString(f.value[j]) : f.value[j].nodeType == Node.TEXT_NODE && (h += f.value[j].nodeValue);
					c.objects.push({
						type : f.type,
						value : h,
						language : f.language
					})
				} else
					c.objects.push({
						type : f.type,
						value : f.value,
						language : f.language
					})
			}
		}
		return a
	};
	C.prototype.getValues = function() {
		for (var a = [], b = 0; b < arguments.length; b++) {
			var d = this.context.curieParser.parse(arguments[b], !0);
			if ( d = this.predicates[d])
				for (var c = 0; c < d.objects.length; c++)
					a.push(d.objects[c].value)
		}
		return a
	};
	J.prototype.toString = function() {
		for (var a = "<" + this.predicate + "> ", b = 0; b < this.objects.length; b++)
			0 < b && (a += ", "), a += '"' + this.objects[b].value.split('"').join('"') + '"';
		return a
	};
	w.prototype = new i;
	w.prototype.constructor = i;
	w.prototype.getObjectSize = function(a) {
		var b = 0, d;
		for (d in a)a.hasOwnProperty(d) && b++;
		return b
	};
	w.prototype.init = function() {
		this.target.tripleCount = 0;
		this.target.triplesGraph = {};
		var a = this;
		this.finishedHandlers.push(function() {
			for (var b in a.target.triplesGraph)0 == a.getObjectSize(a.target.triplesGraph[b].predicates) &&
			delete a.target.triplesGraph[b]
		})
	};
	w.prototype.newSubjectOrigin = function(a, b) {
		for (var d = this.newSubject(null, b), c = 0; c < d.origins.length; c++)
			if (d.origins[c] === a)
				return;
		d.origins.push(a);
		a.data || Object.defineProperty(a, "data", {
			value : d,
			writable : !1,
			configurable : !0,
			enumerable : !0
		})
	};
	w.prototype.newSubject = function(a, b) {
		var d = this.target.triplesGraph[b];
		d || ( d = new C(this.target, b), this.target.triplesGraph[b] = d);
		return d
	};
	w.prototype.addTriple = function(a, b, d, c) {
		var e = this.newSubject(a, b), b = e.predicates[d];
		b || ( b = new J(d), e.predicates[d] = b);
		for (var f = 0; f < b.objects.length; f++)
			if (b.objects[f].type == c.type && b.objects[f].value == c.value) {
				b.objects[f].origin !== a && (Array.isArray(b.objects[f].origin) || ( d = [], d.push(b.objects[f].origin), b.objects[f].origin = d), b.objects[f].origin.push(a));
				return
			}
		this.target.tripleCount++;
		b.objects.push(c);
		c.origin = a;
		d == i.typeURI && e.types.push(c.value)
	};
	A.prototype.getProperties = function() {
		var a = [], b;
		for (b in this._data_.properties)
		a.push(b);
		return a
	};
	A.prototype.getSubject = function() {
		return this._data_.subject
	};
	A.prototype.get = function(a) {
		a = this._data_.owner._data_.curieParser.parse(a, !0);
		return ( a = this._data_.properties[a]) ? a[0] : null
	};
	A.prototype.getAll = function(a) {
		a = this._data_.owner._data_.curieParser.parse(a, !0);
		return this._data_.properties[a]
	};
	j.prototype = new t;
	j.prototype.constructor = j;
	j.nameChar = "[-A-Z_a-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02ff\u0370-\u037d\u037f-\u1fff\u200c-\u200d\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd\u10000-\uefffF.0-9\u00b7\u0300-\u036f\u203f-\u2040]";
	j.nameStartChar = "[A-Za-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u00ff\u0100-\u0131\u0134-\u013e\u0141-\u0148\u014a-\u017e\u0180-\u01c3\u01cd-\u01f0\u01f4-\u01f5\u01fa-\u0217\u0250-\u02a8\u02bb-\u02c1\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03ce\u03d0-\u03d6\u03da\u03dc\u03de\u03e0\u03e2-\u03f3\u0401-\u040c\u040e-\u044f\u0451-\u045c\u045e-\u0481\u0490-\u04c4\u04c7-\u04c8\u04cb-\u04cc\u04d0-\u04eb\u04ee-\u04f5\u04f8-\u04f9\u0531-\u0556\u0559\u0561-\u0586\u05d0-\u05ea\u05f0-\u05f2\u0621-\u063a\u0641-\u064a\u0671-\u06b7\u06ba-\u06be\u06c0-\u06ce\u06d0-\u06d3\u06d5\u06e5-\u06e6\u0905-\u0939\u093d\u0958-\u0961\u0985-\u098c\u098f-\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09dc-\u09dd\u09df-\u09e1\u09f0-\u09f1\u0a05-\u0a0a\u0a0f-\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32-\u0a33\u0a35-\u0a36\u0a38-\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8b\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2-\u0ab3\u0ab5-\u0ab9\u0abd\u0ae0\u0b05-\u0b0c\u0b0f-\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32-\u0b33\u0b36-\u0b39\u0b3d\u0b5c-\u0b5d\u0b5f-\u0b61\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99-\u0b9a\u0b9c\u0b9e-\u0b9f\u0ba3-\u0ba4\u0ba8-\u0baa\u0bae-\u0bb5\u0bb7-\u0bb9\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c33\u0c35-\u0c39\u0c60-\u0c61\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cde\u0ce0-\u0ce1\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\u0d28\u0d2a-\u0d39\u0d60-\u0d61\u0e01-\u0e2e\u0e30\u0e32-\u0e33\u0e40-\u0e45\u0e81-\u0e82\u0e84\u0e87-\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-\u0e9f\u0ea1-\u0ea3\u0ea5\u0ea7\u0eaa-\u0eab\u0ead-\u0eae\u0eb0\u0eb2-\u0eb3\u0ebd\u0ec0-\u0ec4\u0f40-\u0f47\u0f49-\u0f69\u10a0-\u10c5\u10d0-\u10f6\u1100\u1102-\u1103\u1105-\u1107\u1109\u110b-\u110c\u110e-\u1112\u113c\u113e\u1140\u114c\u114e\u1150\u1154-\u1155\u1159\u115f-\u1161\u1163\u1165\u1167\u1169\u116d-\u116e\u1172-\u1173\u1175\u119e\u11a8\u11ab\u11ae-\u11af\u11b7-\u11b8\u11ba\u11bc-\u11c2\u11eb\u11f0\u11f9\u1e00-\u1e9b\u1ea0-\u1ef9\u1f00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2126\u212a-\u212b\u212e\u2180-\u2182\u3041-\u3094\u30a1-\u30fa\u3105-\u312c\uac00-\ud7a3\u4e00-\u9fa5\u3007\u3021-\u3029_]";
	j.NCNAME = RegExp("^" + i.nameStartChar + i.nameChar + "*$");
	j.toProjection = function(a, b, d) {
		var c = new A(a, b.subject), e;
		for (e in b.predicates) {
			var f = b.predicates[e], g = [];
			c._data_.properties[e] = g;
			for (var h = 0; h < f.objects.length; h++)
				g.push(f.objects[h].value)
		}
		if (d)
			for (var i in d) e = d[i], e = a._data_.curieParser.parse(e, !0), ( g = c._data_.properties[e]) && (c[i] = 1 == g.length ? g[0] : g);
		return c
	};
	j.prototype.getProperties = function(a) {
		var b = [];
		if (a) {
			if ( a = this._data_.curieParser.parse(a, !0), e = this._data_.triplesGraph[a])
				for (var d in e.predicates)
				b.push(d)
		} else {
			var c = {};
			for (a in this._data_.triplesGraph) {
				var e = this._data_.triplesGraph[a];
				if (e)
					for (d in e.predicates)
					c[d] || (c[d] = !0, b.push(d))
			}
		}
		return b
	};
	j.prototype.getSubjects = function(a, b) {
		var d = [];
		a && ( a = this._data_.curieParser.parse(a, !0));
		if (a && b) {
			var c = this._data_.curieParser.parse(b, !0), e;
			for (e in this._data_.triplesGraph) {
				var f = this._data_.triplesGraph[e];
				if ( f = f.predicates[a])
					for (var g = 0; g < f.objects.length; g++)
						if (f.objects[g].value == b || f.objects[g].value == c) {
							d.push(e);
							break
						}
			}
		} else if (a)
			for (e in this._data_.triplesGraph) f = this._data_.triplesGraph[e], ( f = f.predicates[a]) && d.push(e);
		else if (b)
			for (e in c = this._data_.curieParser.parse(b, !0), this._data_.triplesGraph) {
				var f = this._data_.triplesGraph[e], h;
				for (h in f.predicates)
				if ( f = e.predicates[h]) {
					for (var i = null, g = 0; !i && g < f.objects.length; g++)
						if (f.objects[g].value == b || node.objects[g].value == c)
							i = f.objects[g];
					if (i) {
						d.push(e);
						break
					}
				}
			}
		else
			for (e in this._data_.triplesGraph)
			d.push(e);
		return d
	};
	j.prototype.getValueOrigins = function(a, b) {
		var d = [], c = function(a) {
			if (a)
				for (var b = 0; b < a.objects.length; b++)
					if (Array.isArray(a.objects[b].origin))
						for (var c = 0; c < a.objects[b].origin.length; c++)
							d.push({
								origin : a.objects[b].origin[c],
								value : a.objects[b].value
							});
					else
						d.push({
							origin : a.objects[b].origin,
							value : a.objects[b].value
						})
		};
		b && ( b = this._data_.curieParser.parse(b, !0));
		if (a) {
			var a = this._data_.curieParser.parse(a, !0), e = this._data_.triplesGraph[a];
			if (e)
				if (b)
					c(e.predicates[b]);
				else
					for (var f in e.predicates)c(e.predicates[f])
		} else if (b)
			for (a in this._data_.triplesGraph) e = this._data_.triplesGraph[a], c(e.predicates[b]);
		else
			for (a in this._data_.triplesGraph)
			for (f in e = this._data_.triplesGraph[a], e.predicates)c(e.predicates[f]);
		return d
	};
	j.prototype.getValues = function(a, b) {
		var d = [];
		b && ( b = this._data_.curieParser.parse(b, !0));
		if (a) {
			var a = this._data_.curieParser.parse(a, !0), c = this._data_.triplesGraph[a];
			if (c)
				if (b) {
					var e = c.predicates[b];
					if (e)
						for (var f = 0; f < e.objects.length; f++)
							d.push(e.objects[f].value)
				} else
					for (var g in c.predicates) {
						e = c.predicates[g];
						for ( f = 0; f < e.objects.length; f++)
							d.push(e.objects[f].value)
					}
		} else if (b)
			for (a in this._data_.triplesGraph) {
				if ( c = this._data_.triplesGraph[a], e = c.predicates[b])
					for ( f = 0; f < e.objects.length; f++)
						d.push(e.objects[f].value)
			}
		else
			for (a in this._data_.triplesGraph)
			for (g in c = this._data_.triplesGraph[a], c.predicates) {
				e = c.predicates[g];
				for ( f = 0; f < e.objects.length; f++)
					d.push(e.objects[f].value)
			}
		return d
	};
	Object.defineProperty(j.prototype, "prefixes", {
		enumerable : !0,
		get : function() {
			return Object.keys(this._data_.prefixes)
		}
	});
	j.prototype.setMapping = function(a, b) {
		this._data_.prefixes[a] = b
	};
	j.prototype.getMapping = function(a) {
		return this._data_.prefixes[a]
	};
	j.prototype.expand = function(a) {
		return this._data_.curieParser.parse(a, !0)
	};
	j.prototype.shorten = function(a) {
		for (prefix in this._data_.prefixes) {
			var b = this._data_.prefixes[prefix];
			if (0 == a.indexOf(b))
				return prefix + ":" + a.substring(b.length)
		}
		return a
	};
	j.prototype.getSubject = function(a) {
		if (!a)
			return null;
		a = this._data_.curieParser.parse(a, !0);
		return this._data_.triplesGraph[a]
	};
	j.prototype.getProjection = function(a, b) {
		if (!a)
			return null;
		var a = this._data_.curieParser.parse(a, !0), d = this._data_.triplesGraph[a];
		return !d ? null : j.toProjection(this, d, b)
	};
	j.prototype.getProjections = function(a, b, d) {
		a && ( a = this._data_.curieParser.parse(a, !0));
		var c = [];
		"undefined" == typeof b && "undefined" == typeof d && ( d = a);
		if (a && b) {
			var e = this._data_.curieParser.parse(b, !0), f;
			for (f in this._data_.triplesGraph) {
				var g = this._data_.triplesGraph[f], h = g.predicates[a];
				if (h)
					for (var i = 0; i < h.objects.length; i++)
						if (h.objects[i].value == b || h.objects[i].value == e) {
							c.push(j.toProjection(this, g, d));
							break
						}
			}
		} else if (a)
			for (f in this._data_.triplesGraph) g = this._data_.triplesGraph[f], g.predicates[a] && c.push(j.toProjection(this, g, d));
		else
			for (f in this._data_.triplesGraph) g = this._data_.triplesGraph[f], c.push(j.toProjection(this, g, d));
		return c
	};
	Element.prototype.getElementsByType = function() {
		var a = arguments, b = this.ownerDocument.createTreeWalker(this, NodeFilter.SHOW_ELEMENT, {
			acceptNode : function(b) {
				if (!b.data)
					return NodeFilter.FILTER_REJECT;
				for (var d = 0; d < a.length; d++)
					if (0 <= b.data.types.indexOf(a[d]))
						return NodeFilter.FILTER_ACCEPT;
				return NodeFilter.FILTER_REJECT
			}
		}, !1), d = [];
		for (d.item = function(a) {
			return this[a]
		}; b.nextNode(); )
			d.push(b.currentNode);
		return d
	};
	Element.prototype.getFirstElementByType = function() {
		var a = arguments, b = this.ownerDocument.createTreeWalker(this, NodeFilter.SHOW_ELEMENT, {
			acceptNode : function(b) {
				if (!b.data)
					return NodeFilter.FILTER_REJECT;
				for (var c = 0; c < a.length; c++)
					if (0 <= b.data.types.indexOf(a[c]))
						return NodeFilter.FILTER_ACCEPT;
				return NodeFilter.FILTER_REJECT
			}
		}, !1);
		return b.nextNode() ? b.currentNode : null
	};
	j.attach = function(a) {
		Object.defineProperty(a, "data", {
			value : new j(a.baseURI),
			writable : !1,
			configurable : !1,
			enumerable : !0
		});
		a.getElementsByType = function(a) {
			return this.getElementsByProperty("http://www.w3.org/1999/02/22-rdf-syntax-ns#type", a)
		};
		a.getElementsBySubject = function(a) {
			var d = [];
			d.item = function(a) {
				return this[a]
			};
			a = this.data._data_.curieParser.parse(a, !0);
			if ( a = this.data._data_.triplesGraph[a])
				for (var c = 0; c < a.origins.length; c++)
					d.push(a.origins[c]);
			return d
		};
		a.getElementsByProperty = function(a, d) {
			var c = [];
			c.item = function(a) {
				return this[a]
			};
			d && ( d = this.data._data_.curieParser.parse(d, !1));
			var e = "undefined" == typeof d, a = this.data._data_.curieParser.parse(a, !0), f;
			for (f in this.data._data_.triplesGraph) {
				var g = this.data._data_.triplesGraph[f].predicates[a];
				if (g)
					for (var h = 0; h < g.objects.length; h++)
						if (e || g.objects[h].value == d)
							Array.isArray(g.objects[h].origin) ? c.push.apply(c, g.objects[h].origin) : c.push(g.objects[h].origin)
			}
			return c
		};
		a.getElementSubject = function(a) {
			for (var d in this.data._data_.triplesGraph)
			if (0 <= this.data._data_.triplesGraph[d].origins.indexOf(a))
				return d;
			return null
		}
	};
	var N = p.implementation.hasFeature;
	p.implementation.hasFeature = function(a, b) {
		return "RDFaAPI" == a && "1.1" == b ? !0 : N.apply(this, arguments)
	};
	var K = p.data ? !0 : !1;
	if (p.head) {
		var r = p.createElement("meta");
		r.setAttribute("name", "green-turtle-rdfa-message");
		p.head.appendChild(r);
		var H = function() {
			var a = p.createEvent("Event");
			a.initEvent("green-turtle-rdfa-extension", !0, !0);
			return a
		};
		r.addEventListener("green-turtle-rdfa-document", function(a) {
			var b = JSON.parse(r.getAttribute("content"));
			if ("status" == b.type) {
				var d = H();
				r.setAttribute("content", '{ "type": "status", "loaded": ' + K + ', "count": ' + p.data._data_.tripleCount + " }");
				setTimeout(function() {
					r.dispatchEvent(d)
				}, 1)
			} else if ("get-subjects" == b.type) {
				var c = p.data.getSubjects();
				r.setAttribute("content", '{ "type": "subjects", "subjects": ' + JSON.stringify(c) + " }");
				a = H();
				setTimeout(function() {
					r.dispatchEvent(a)
				}, 1)
			} else if ("get-subject" == b.type) {
				var e = null;
				if (p.data.getSubject)
					e = p.data.getSubject(b.subject).toObject();
				else
					for (var e = {
						subject : b.subject,
						predicates : {}
					}, f = p.data.getProjection(b.subject), g = f.getProperties(), h = 0; h < g.length; h++) {
						var i = [];
						e.predicates[g[h]] = {
							predicate : predicate,
							objects : i
						};
						for (var j = f.getAll(g[h]), m = 0; m < j.length; m++)
							c[j[m]] ? i.push({
								type : "http://www.w3.org/1999/02/22-rdf-syntax-ns#object",
								value : j[m]
							}) : i.push({
								type : "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral",
								value : j[m]
							})
					}
				r.setAttribute("content", JSON.stringify({
					type : "subject",
					subject : b.subject,
					triples : e
				}));
				a = H();
				setTimeout(function() {
					r.dispatchEvent(a)
				}, 1)
			}
		}, !1)
	}
	p.data || j.attach(p);
	var L = function() {
		var a = new w(p.data._data_);
		a.finishedHandlers.push(function(a) {
			if (a.ownerDocument) {
				var d = a.ownerDocument.createEvent("HTMLEvents");
				d.initEvent("rdfa.loaded", !0, !0);
				a.ownerDocument.dispatchEvent(d)
			}
		});
		a.process(p.documentElement);
		K = !0
	};
	"loading" == p.readyState ? window.addEventListener("load", function() {
		L()
	}, !1) : L()
};
RDFa.attach(document);
